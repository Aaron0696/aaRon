% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto.class.R
\name{auto.class}
\alias{auto.class}
\title{Automatically Classify A Vector As Numeric/Factor/Character}
\usage{
auto.class(vector, unique.thres.fac = 20)
}
\arguments{
\item{vector}{A vector to be classified.}

\item{unique.thres.fac}{The maximum number of unique categories for a vector to be classified as a factor, \code{X} in the description takes this value. Defaults to 20.}
}
\value{

}
\description{
Takes in a vector as input, coerces the vector into a specific class using \code{as.numeric()}, \code{factor()} or \code{as.character()}. Coerced vector is returned as output.
The classification of the class is based on the following chain of logic:
\itemize{
  \item If the vector contains elements with non-numeric characters and have less than \code{X} unique values, classify as factor.
  \item If the vector contains elements with non-numeric characters and have more than \code{X} unique values, classify as character.
  \item If the vector contains elements with only numeric characters and have more than \code{X} unique values, classify as numeric.
  \item If the vector contains elements with non-numeric characters and have less than \code{X} unique values, classify as factor.
}
}
\examples{
# return numeric
auto.class(1:100)

# return factor
auto.class(rep(1:7,10))

# return character
auto.class(c(1:100,"hello"))

# return factor
auto.class(c("Strongly Agree","Agree","Disagree","Strongly Disagree"))

# use with lapply to apply across entire dataframe
mydata <- data.frame(A = 1:100, B = c(1:99,"hello"))
data.frame(lapply(mydata, FUN = auto.class))
}
